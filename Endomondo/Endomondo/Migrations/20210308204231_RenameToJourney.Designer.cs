// <auto-generated />
using System;
using Endomondo.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Endomondo.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210308204231_RenameToJourney")]
    partial class RenameToJourney
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.3");

            modelBuilder.Entity("Endomondo.Models.Journey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT");

                    b.Property<double>("Distance")
                        .HasColumnType("REAL");

                    b.Property<double>("Duration")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Journeys");
                });

            modelBuilder.Entity("Endomondo.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("JoruneyId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("JourneyId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Latitude")
                        .HasColumnType("REAL");

                    b.Property<double>("Longitude")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("WriteTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("JourneyId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("Endomondo.Models.Location", b =>
                {
                    b.HasOne("Endomondo.Models.Journey", "Journey")
                        .WithMany("Locations")
                        .HasForeignKey("JourneyId");

                    b.Navigation("Journey");
                });

            modelBuilder.Entity("Endomondo.Models.Journey", b =>
                {
                    b.Navigation("Locations");
                });
#pragma warning restore 612, 618
        }
    }
}
